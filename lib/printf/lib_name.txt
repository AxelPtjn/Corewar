Lib (snake2.0):

1 - My_putchar : (prends en entré un caractère )
print 1 caractère

2 - my_isneg_p : (prends en entré un entier)
return 1 si positif return 0 si negatif

3 - My_put_nbr: (prends en entré un entier)
renvoie un entier

4 - My_putstr : (prends en entré une chaine de caractère)
parcours une chaine de caractère

5 - My_swap : (prends en entré 2 pointeurs (entier qu’on déplace))
Interchanges 2 pointers

6 - my_strlen(prends en entré une str)
et renvoie la taille de la str mise en entrée

7 - my_getnbr(prends en entré une str)uh
et renvoie le premiere chiffres en int contenue dans cette str (meme s'il est negtif))

8 - my_sort_int_array : (prends en argument une string (tableau) et 1 entier (la taille))
Trie une string(un tableau d’entiers )dans l’ordre croisant (mais a besoin de la taille)

9 - my_compute_power_rec : (prends en entrée 2 int, le premier un nb le 2eme l'exposant)
renvoie le premier int elever a la puissances du 2eme

10 - my_compute_square_root : (prends en entrée 1 int)
renvoie la racine carré du int mis en entrée sir le int n'a pas de racine carré elle renvoie 0

11 - my_is_prime : (prends en entrée 1 int)
renvoie un 1 si le int est un nombre premier sinon renvoie 0

12 - my_find_prime_sup : (prends en entrée 1 int)
renvoie le plus petit nombre premier superieur ou egal au int

13 - my_strcpy : (prends en entrée 2 char *)
renvoie le premier char * dans lequel on a copier le 2eme

14 - my_strncpy : (prends en entrée 2 char * et 1 int)
renvoie le premier char * dans lequel on a copier le 2eme au nombre de caratere du int

15 - my_revstr : (prends en entrée 1 char *)
renvoie la str a l'envers

16 - my_strstr : (prends en entrée 2 char*)
trouve la premiere occurence d'une str dans une str et
renvoie la str

17 - my_strcmp : (prends en entrée 2 char*)
renvoie la diference de taille entre les 2 str

18 - my_strncmp : (prends en entrée 2 char * et 1 int)
Cette fonction permet de comparer deux chaînes de caractères et de savoir
si la première est inférieure, égale ou supérieure à la seconde

19 - my_strupcase : (prends en entrée 1 char *)
renvoie la chaine de caractère initial avec les miniscules remplacer par des majuscules

20 - my_strlowcase : (prends en entrée 1 char *)
renvoie la chaine de caractère initial avec les majuscules remplacer par des miniscules

21 - my_strcapitalize : (prends en entrée 1 char *)
renvoie la chaine de caractère initial aprés avoir enlever toutes les majusclules et mis
la premiere lettres de chaques mots en majuscules

22 - my_str_isalpha : (prends en entrée 1 char *)
renvoie 1 si la str ne contient que des lettres (maj ou min) sinon 0

23 - my_str_isnum : (prends en entrée 1 char *)
renvoie 1 si la str ne contient que des chiffres(1 a 9) sinon 0

24 - my_str_islower : (prends en entrée 1 char *)
renvoie 1 si la str ne contient que des lettres miniscules sinon 0

25 - my_str_isupper : (prends en entrée 1 char *)
renvoie 1 si la str ne contient que des lettres majusclules sinon 0

26 - my_str_isprintable : (prends en entrée 1 char *)
renvoie 1 si la str ne contient que des caractères printables sinon 0

27 - my_showstr : (prends en entrée 1 char *)
renvoie 0 si la chaine contient des caractere non printable

28 - my_showmem : (prends en entrée 1 char * et un int)

29 - my_strcat : (prends en entrée 2 char *)
Renvoie le 1er char * (finie par \0) dans lequel a eté ajouter
entierement le 2emes char *

30 - my_strncat : (prends en entrée 2 char * et 1 int)
Renvoie le 1er char * (finie par \0) dans lequel a eté ajouter
entierement le 2emes char * jusqu'au int (si le int est
superieur a la taille total le char * de sortie aura le nombres max)
ex : my_strncat("Hello", "World, 6) = "HelloW"

My_put_float : (prends en entré un float)
Renvoie un float avec 2 chiffres après la virgule

My_show_word_array :
renvoie les arguments d’un tableau

my_str_to_word_array : (prends en entrée un char *)
renvoie un tableau dans lequel chaque ocurence contient l'adress d'un mots
et la derniere cellule contient l'adresse d'une chaine

table des fonctions :

1 void my_putchar(char c);
2 int my_isneg_p(int nb);
3 int my_put_nbr(int nb);
4 void my_swap(int *a, int *b);
5 int my_putstr(char const *str);
6 int my_strlen(char const *str);
7 int my_getnbr(char const *str);
8 void my_sort_int_array(int *tab, int size);
9 int my_compute_power_rec(int nb, int power);
10 int my_compute_square_root(int nb);
11 int my_is_prime(int nb);
12 int my_find_prime_sup(int nb);
13 char *my_strcpy(char *dest, char const *src);
14 char *my_strncpy(char *dest, char const *src, int n);
15 char *my_revstr(char *str);
16 char *my_strstr(char *str, char const *to_find);
17 int my_strcmp(char const *s1, char const *s2);
18 int my_strncmp(char const *s1, char const *s2, int n);
19 char *my_strupcase(char *str);
20 char *my_strlowcase(char *str);
21 char *my_strcapitalize(char *str);
22 int my_str_isalpha(char const *str);
23 int my_str_isnum(char const *str);
24 int my_str_islower(char const *str);
25 int my_str_isupper(char const *str);
26 int my_str_isprintable(char const *str);
27 int my_showstr(char const *str); (fait mais inutile)
28 int my_showmem(char const *str, int size); (pas fait)
29 char *my_strcat(char *dest, char const *src);
30 char *my_strncat(char *dest, char const *src, int nb);


Tty help :
Changer la police
Setfont justelenomdelapolice
Trv les fonts /lib/kbd/consolefonts
setfont lat4a-19.psfu.gz

Command :
./ : permet d’executer un programme
ls : voir l’intérieur d’un répertoire
man : manuel avec toute les commande
pwd : savoir dans quel fichier on est
mkdir : cree un repertoire
cd : rentré dedans (allez dans)
touch: crée un fichier
cat : voir dans un fichier
cp nomfichieracopier fichiercoller : copié colé fichier
mv : move donc déplacer d’un fichier a un autres
rm :supprimé des fichier  ect
rmdir : supprimer un repertoire
chmod : change les perm d’un fichier
git + -option (permet notamment de push)
find + -option (permet de rechecher un element)
Ex : -name ‘truck_a_chercher*’ pour chercher un nom
-delete (pour sup)
-o (ou)
-type (pour chercher du spécifique )
grep : permet de chercher une chaine de caractère (avec $1 qui se remplace dans ca commandes)
clear : nettoyer le terminal
tr : change les standars imput
sed : plein d'option cool a tester en bash
wc : boucle infini
Head : encore boucle infini
tail : toujours boucle infini
sort : toujours boucle infini
cut : faire des recherches
less : faire des recherches
more : faire des recherches


header possible :
/*
** EPITECH PROJECT, 2023
** B-CPE-210-LYN-2-1-solostumper02-pierre.giordano
** File description:
**
*/


main temp :

int main(int argc, char **argv)
{
    printf("%s", my_strlowcase(argv[1]));
    return 0;
}